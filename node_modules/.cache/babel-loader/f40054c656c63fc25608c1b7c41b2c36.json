{"ast":null,"code":"var _jsxFileName = \"/Users/scoda/Desktop/RoomBookingReact/roombooking/src/components/RoomDetails.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport RoomsService from \"../service/RoomsService\";\nimport DateTimePicker from 'react-datetime-picker';\nimport Meeting from \"../models/Meeting\";\n\nclass RoomDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onStartDateChange = startDate => {\n      this.setState({\n        startDate: startDate,\n        isRoomAvailable: false,\n        endDate: moment(startDate).add(30, 'm').toDate()\n      });\n    };\n\n    this._onEndDateChange = endDate => {\n      this.setState({\n        endDate,\n        isRoomAvailable: false\n      });\n    };\n\n    this._formHandler = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            roomDetails = _this$state.roomDetails,\n            startDate = _this$state.startDate,\n            endDate = _this$state.endDate;\n      const status = this.roomsService.getAvailability(roomDetails.getRoomId(), startDate, endDate);\n      this.setState({\n        isRoomAvailable: status\n      });\n    };\n\n    this.errorBookingRoom = message => {\n      console.log(message);\n    };\n\n    this._onBookRoom = e => {\n      const meeting = new Meeting({\n        meetingId: 'id1',\n        userName: e.target.name.value,\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        agenda: e.target.agenda.value\n      });\n      this.roomsService.bookRoom(this.state.roomDetails.getRoomId(), meeting);\n    };\n\n    this.state = {\n      roomDetails: null,\n      startDate: moment().toDate(),\n      endDate: moment(moment()).add(30, 'm').toDate(),\n      errorBooking: '',\n      isRoomAvailable: false\n    };\n  }\n\n  componentDidMount() {\n    const roomId = this.props.match.params.roomId;\n    this.roomsService = new RoomsService(this);\n    const roomDetails = this.roomsService.getRoom(roomId);\n    this.setState({\n      roomDetails: roomDetails\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          roomDetails = _this$state2.roomDetails,\n          startDate = _this$state2.startDate,\n          endDate = _this$state2.endDate,\n          isRoomAvailable = _this$state2.isRoomAvailable;\n    return roomDetails && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Room: \", roomDetails.getRoomId()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this._formHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"start-time-picker form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"startTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Start Time:\"), React.createElement(DateTimePicker, {\n      id: \"startTime\",\n      name: \"startTime\",\n      onChange: this._onStartDateChange,\n      value: startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"end-time-picker form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"endTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"End Time:\"), React.createElement(DateTimePicker, {\n      id: \"endTime\",\n      name: \"endTime\",\n      onChange: this._onEndDateChange,\n      value: endDate,\n      minDate: startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Check Availability\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, isRoomAvailable && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label label-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Room is available. Please enter following details\"), React.createElement(\"form\", {\n      onSubmit: this._onBookRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"name\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"Enter name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Agenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"agenda\",\n      className: \"form-control\",\n      id: \"Agenda\",\n      placeholder: \"Enter  Agenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Book\"))))));\n  }\n\n}\n\nexport default RoomDetails;","map":{"version":3,"sources":["/Users/scoda/Desktop/RoomBookingReact/roombooking/src/components/RoomDetails.js"],"names":["React","moment","RoomsService","DateTimePicker","Meeting","RoomDetails","Component","constructor","props","_onStartDateChange","startDate","setState","isRoomAvailable","endDate","add","toDate","_onEndDateChange","_formHandler","e","preventDefault","state","roomDetails","status","roomsService","getAvailability","getRoomId","errorBookingRoom","message","console","log","_onBookRoom","meeting","meetingId","userName","target","name","value","startTime","endTime","agenda","bookRoom","errorBooking","componentDidMount","roomId","match","params","getRoom","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment';\n\nimport RoomsService from \"../service/RoomsService\";\n\nimport DateTimePicker from 'react-datetime-picker'\nimport Meeting from \"../models/Meeting\";\n\n\nclass RoomDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            roomDetails: null,\n            startDate: moment().toDate(),\n            endDate: moment(moment()).add(30, 'm').toDate(),\n            errorBooking: '',\n            isRoomAvailable: false\n        }\n    }\n\n    componentDidMount() {\n        const roomId = this.props.match.params.roomId;\n\n        this.roomsService = new RoomsService(this);\n\n        const roomDetails = this.roomsService.getRoom(roomId);\n\n        this.setState({\n            roomDetails: roomDetails\n        })\n    }\n\n    _onStartDateChange = (startDate) => {\n\n\n        this.setState({\n            startDate: startDate,\n            isRoomAvailable: false,\n            endDate: moment(startDate).add(30, 'm').toDate()\n        });\n    };\n\n    _onEndDateChange = (endDate) => {\n        this.setState({\n            endDate,\n            isRoomAvailable: false\n        });\n    };\n\n    _formHandler = (e) => {\n        e.preventDefault();\n\n        const {roomDetails, startDate, endDate} = this.state;\n\n        const status = this.roomsService.getAvailability(\n            roomDetails.getRoomId(),\n            startDate,\n            endDate\n        );\n\n        this.setState({\n            isRoomAvailable: status\n        })\n    };\n\n    errorBookingRoom = (message) => {\n        console.log(message);\n    };\n\n    _onBookRoom = (e) => {\n\n        const meeting = new  Meeting({\n           meetingId: 'id1',\n            userName: e.target.name.value,\n            startTime: this.state.startTime,\n            endTime: this.state.endTime,\n            agenda: e.target.agenda.value\n        });\n        this.roomsService.bookRoom(\n            this.state.roomDetails.getRoomId(),\n            meeting\n        )\n    };\n\n    render() {\n        const {roomDetails, startDate, endDate, isRoomAvailable} = this.state;\n\n        return (\n            roomDetails && (\n                <div>\n                    <h1>\n                        Room: {roomDetails.getRoomId()}\n                    </h1>\n\n                    <div>\n                        <form onSubmit={this._formHandler}>\n                            <div className=\"start-time-picker form-group\">\n                                <label htmlFor=\"startTime\">Start Time:</label>\n                                <DateTimePicker\n                                    id='startTime'\n                                    name='startTime'\n                                    onChange={this._onStartDateChange}\n                                    value={startDate}\n                                />\n                            </div>\n\n                            <div className=\"end-time-picker form-group\">\n                                <label htmlFor=\"endTime\">End Time:</label>\n\n                                <DateTimePicker\n                                    id='endTime'\n                                    name='endTime'\n                                    onChange={this._onEndDateChange}\n                                    value={endDate}\n                                    minDate={startDate}\n                                />\n                            </div>\n\n\n                            <button\n                                className='btn btn-primary'\n                                type='submit'\n                            >\n                                Check Availability\n                            </button>\n                        </form>\n\n                        <span>\n                            {isRoomAvailable && (\n                                <React.Fragment>\n                                    <span className=\"label label-success\">\n                                        Room is available. Please enter following details\n                                    </span>\n\n                                    <form onSubmit={this._onBookRoom}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name\">Name</label>\n                                            <input type=\"name\" className=\"form-control\" id=\"name\"\n                                                   placeholder=\"Enter name\"/>\n\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Agenda\">Password</label>\n                                            <input type=\"agenda\" className=\"form-control\" id=\"Agenda\"\n                                                   placeholder=\"Enter  Agenda\"/>\n                                        </div>\n\n                                        <button type=\"submit\" className=\"btn btn-primary\">Book</button>\n                                    </form>\n                                </React.Fragment>\n\n                            )}\n                        </span>\n                    </div>\n                </div>\n            )\n        )\n    }\n\n}\n\nexport default RoomDetails\n"]},"metadata":{},"sourceType":"module"}